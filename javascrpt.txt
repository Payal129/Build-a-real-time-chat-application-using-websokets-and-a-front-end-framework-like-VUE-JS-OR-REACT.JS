// src/App.js (React)
import React, { useState, useEffect, useRef } from 'react';

function App() {
  const [messages, setMessages] = useState([]);
  const [newMessage, setNewMessage] = useState('');
  const ws = useRef(null); // Store the WebSocket connection

  useEffect(() => {
    // Establish WebSocket connection
    ws.current = new WebSocket('ws://localhost:8080'); // Replace with your server URL

    ws.current.onopen = () => {
      console.log('Connected to WebSocket server');
    };

    ws.current.onmessage = (event) => {
      const message = JSON.parse(event.data);
      setMessages((prevMessages) => [...prevMessages, message]);
    };

    ws.current.onclose = () => {
      console.log('Disconnected from WebSocket server');
    };

    ws.current.onerror = (error) => {
      console.error('WebSocket error:', error);
    };

    // Clean up on unmount
    return () => {
      if (ws.current) {
        ws.current.close();
      }
    };
  }, []);

  const sendMessage = () => {
    if (newMessage.trim() !== '' && ws.current && ws.current.readyState === WebSocket.OPEN) {
      const message = { text: newMessage }; // Include username if you have user authentication
      ws.current.send(JSON.stringify(message));
      setNewMessage(''); // Clear the input field
    }
  };

  return (
    <div>
      <h1>Real-time Chat</h1>
      <div className="message-container">
        {messages.map((msg, index) => (
          <div key={index}>{msg.text}</div> // Display username if included
        ))}
      </div>
      <div className="input-area">
        <input
          type="text"
          value={newMessage}
          onChange={(e) => setNewMessage(e.target.value)}
        />
        <button onClick={sendMessage}>Send</button>
      </div>
    </div>
  );
}

export default App;